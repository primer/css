// stylelint-disable primer/typography, primer/borders, primer/spacing, max-nesting-depth, selector-max-type, selector-max-specificity, selector-no-qualifying-type

// group label, field, caption and error message
.FormControl {
  display: inline-flex;
  flex-direction: column;
  gap: var(--base-size-4, 4px);
}

// fill container
.FormControl--fullWidth {
  display: flex;
}

// <label>
.FormControl-label {
  font-size: var(--primer-text-body-size-medium, 14px);
  font-weight: var(--base-text-weight-semibold, 600);
  line-height: var(--primer-text-body-lineHeight-medium, 20px);
  color: var(--color-fg-default);
  user-select: none;
}

// optional caption
.FormControl-caption {
  margin-bottom: 0;
  font-size: var(--primer-text-caption-size, 12px);
  font-weight: var(--primer-text-caption-weight, 400);
  line-height: var(--primer-text-caption-lineHeight, 16px);
  color: var(--color-fg-muted);
}

.FormControl-validation {
  display: flex;
  font-size: var(--primer-text-caption-size, 12px);
  font-weight: var(--base-text-weight-semibold, 600);
  color: var(--color-danger-fg);
  fill: var(--color-danger-fg);
  flex-direction: row;
  align-items: center;
  gap: var(--base-size-4, 4px);

  p {
    margin-bottom: 0;
  }
}

.FormControl--checkbox,
.FormControl--radio {
  display: inline-grid;
  grid-template-areas: 'field label' '. caption';
  grid-template-columns: min-content auto;
  gap: var(--base-size-8, 8px);

  .FormControl-label {
    grid-area: label;
  }

  .FormControl-caption {
    grid-area: caption;
  }
}

// shared among all form control components (input, select, textarea, checkbox, radio)
@mixin Field {
  background-color: var(--color-canvas-default);
  border: solid var(--primer-borderWidth-thin, 1px) var(--color-border-default);

  &[disabled] {
    color: var(--color-primer-fg-disabled);
    cursor: not-allowed;
    background-color: var(--color-input-disabled-bg);
    border-color: var(--color-border-default);
    opacity: 1;
    -webkit-text-fill-color: var(--color-primer-fg-disabled);
  }

  &:not(:focus)[invalid] {
    border-color: var(--color-danger-emphasis);
  }

  &:not([type='checkbox']):not([type='radio']):focus {
    @include focusBoxShadowInset;

    // remove fallback :focus if :focus-visible is supported
    &:not(:focus-visible) {
      border-color: transparent;

      @include focusBoxShadowInset(1px, transparent);
    }
  }

  // default focus state
  &:focus-visible {
    @include focusBoxShadowInset;
  }
}

@mixin Field--inset {
  background-color: var(--color-canvas-inset);
}

@mixin Field--monospace {
  font-family: var(
    --primer-fontStack-monospace,
    'ui-monospace, SFMono-Regular, SF Mono, Menlo, Consolas, Liberation Mono, monospace'
  );
}

// <select> and <input>
@mixin Field--input_select_textarea {
  width: 100%;
  font-size: var(--primer-text-body-size-medium, 14px);
  line-height: var(--primer-text-body-lineHeight-medium, 20px);
  border-radius: var(--primer-borderRadius-medium, 6px);
  transition: 80ms cubic-bezier(0.33, 1, 0.68, 1);
  transition-property: color, background-color, box-shadow, border-color;
  padding-inline: var(--primer-control-medium-paddingInline-condensed, 8px);
  padding-block: calc(var(--primer-control-medium-paddingBlock, 6px) - var(--primer-borderWidth-thin, 1px));

  &[disabled] {
    &::placeholder {
      color: var(--color-primer-fg-disabled);
    }
  }

  ::placeholder {
    color: var(--color-fg-subtle);
    opacity: 1;
  }
}

// sizes

@mixin Field--small {
  height: var(--primer-control-small-size, 28px);
  padding-inline: var(--primer-control-small-paddingInline-normal, 8px);
  padding-block: var(--primer-control-small-paddingBlock, 4px);
  font-size: var(--primer-text-body-size-small, 12px);
}

@mixin Field--medium {
  height: var(--primer-control-medium-size, 32px);
}

@mixin Field--large {
  height: var(--primer-control-large-size, 40px);
  padding-inline: var(--primer-control-large-paddingInline-normal, 12px);
  padding-block: var(--primer-control-large-paddingBlock, 10px);
}

@mixin CheckboxRadio {
  display: grid;
  width: var(--base-size-16, 16px);
  height: var(--base-size-16, 16px);
  margin: 0;
  margin-top: 0.125rem; // 2px to center align with label (20px line-height)
  border: solid var(--primer-borderWidth-thin, 1px) var(--color-border-default);
  transition: border-color, background 80ms cubic-bezier(0.33, 1, 0.68, 1) 120ms; // checked -> unchecked
  appearance: none;
  place-content: center;
  grid-area: field;

  &::before {
    width: var(--base-size-16, 16px);
    height: var(--base-size-16, 16px);
    visibility: hidden;
    content: '';
    background-color: var(--color-fg-on-emphasis);
    transition: visibility 0s linear 230ms;
    mask-repeat: no-repeat;
    mask-position: center;
  }

  &:checked {
    background: var(--color-accent-fg);
    border-color: var(--color-accent-fg);
    transition: border-color, background 80ms cubic-bezier(0.32, 0, 0.67, 0) 0ms; // unchecked -> checked

    &::before {
      visibility: visible;
      transition: visibility 0s linear 0s;
    }
  }

  &:focus,
  &:focus-visible {
    outline-offset: 2px;
  }
}

@mixin CheckboxRadioLabelWrap {
  display: flex;
  flex-direction: column;
  gap: var(--base-size-4, 4px);
}
