// Layout alpha mixins

@mixin flow-as-row {
  grid-auto-flow: row;
  grid-template-columns: 1fr !important;

  .Layout-sidebar,
  .Layout-divider,
  .Layout-main {
      width: 100% !important;
      grid-column: 1 !important;
    }

  &.Layout--sidebarPosition-flowRow-start {
    .Layout-sidebar {
      grid-row: 1;
    }

    .Layout-main {
      grid-row: 2 / span 2;
    }
  }

  &.Layout--sidebarPosition-flowRow-end {
    .Layout-sidebar {
      grid-row: 2 / span 2;
    }

    .Layout-main {
      grid-row: 1;
    }
  }

  &.Layout--sidebarPosition-flowRow-none {
    .Layout-sidebar {
      display: none;
    }
  }

  &.Layout--divided {
    @include flow-as-row-divider;

    .Layout-main {
      grid-row: 3 / span 1;
    }

    &.Layout--sidebarPosition-flowRow-end {
      .Layout-sidebar {
        grid-row: 3 / span 1;
      }

      .Layout-main {
        grid-row: 1;
      }
    }
  }
}

@mixin flow-as-row-divider {
  --Layout-gutter: 0;

  .Layout-divider {
    height: 1px;
    grid-row: 2;

    &.Layout-divider--flowRow-hidden {
      display: none;
    }

    &.Layout-divider--flowRow-shallow {
      height: 8px;
      margin-right: 0;
      background: var(--color-canvas-inset);
      border-color: var(--color-border-default);
      border-style: solid;
      border-width: $border-width 0;
    }
  }
}

// Layout beta mixins

@mixin Layout-multiColumn {

  // Set a `content` region width, to work with loading states when
  // `pane` is not yet loaded. See https://github.com/primer/css/pull/1818
  $Layout-content-full-width: minmax(0, calc(100% - var(--Layout-pane-width) - var(--Layout-column-gap)));

  &.#{$Layout}--#{$Layout-prop-pane-position}-start {
    --Layout-template-columns: var(--Layout-pane-width) #{$Layout-content-full-width};
    --Layout-template-areas: "pane content";
  }

  &.#{$Layout}--#{$Layout-prop-pane-position}-end {
    --Layout-template-columns: #{$Layout-content-full-width} var(--Layout-pane-width);
    --Layout-template-areas: "content pane";
  }

  // Pane divider

  &.#{$Layout}--#{$Layout-prop-pane-divider} {
    &.#{$Layout}--#{$Layout-prop-pane-position}-start {
      .#{$Layout}-pane {
        border-right: 1px solid $Layout-divider-color;
      }

      &:not(.#{$Layout}--#{$Layout-prop-column-gap}-none) {
        .#{$Layout}-pane {
          margin-right: calc(var(--Layout-column-gap) * -1);
          padding-right: calc(var(--Layout-column-gap) - 1px);
        }
        .#{$Layout}-content {
          margin-left: var(--Layout-column-gap);
        }
      }
    }

    &.#{$Layout}--#{$Layout-prop-pane-position}-end {
      .#{$Layout}-pane {
        border-left: 1px solid $Layout-divider-color;
      }

      &:not(.#{$Layout}--#{$Layout-prop-column-gap}-none) {
        .#{$Layout}-pane {
          margin-left: calc(var(--Layout-column-gap) * -1);
          padding-left: calc(var(--Layout-column-gap) - 1px); 
        }
        .#{$Layout}-content {
          margin-right: var(--Layout-column-gap);
        }
      }
    }
  }

  // Sticky pane

  &.#{$Layout}--#{$Layout-prop-pane-is-sticky} {
    .#{$Layout}-pane {
      position: sticky;
      top: 0;
      max-height: 100vh;
      overflow: auto;
    }
  }
}

@mixin Layout-stackRegions($max-breakpoint) {
  @media (max-width: calc(#{map-get($breakpoints, $max-breakpoint)} - 0.02px)) {
    --Layout-template-columns: 1fr;

    // responsive-pane-position: end (default)
    --Layout-template-areas: 'content' 'pane';

    // responsive-pane-position: start
    &.#{$Layout}--#{$Layout-prop-stackRegions-pane-position}-start {
      --Layout-template-areas: 'pane' 'content';
    }
  }
}

@mixin Layout-separateRegions($max-breakpoint) {
  @media (max-width: calc(#{map-get($breakpoints, $max-breakpoint)} - 0.02px)) {
    --Layout-template-columns: 1fr;
    --Layout-template-areas: 'content';

    &.#{$Layout}--#{$Layout-prop-separateRegions-primary-region}-content {
      --Layout-template-areas: 'content';
      .#{$Layout}-pane {
        display: none;
      }
    }

    &.#{$Layout}--#{$Layout-prop-separateRegions-primary-region}-pane {
      --Layout-template-areas: 'pane';
      .#{$Layout}-content {
        display: none;
      }
    }
  }
}