{"expireTime":9007200815030643000,"key":"gatsby-mdx-entire-payload-271c8d4e9c691d8ef69738b6dd2f7aa1-","val":{"mdast":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"Use Progress components to visualize task completion. The ","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":59,"offset":60},"indent":[]}},{"type":"inlineCode","value":"Progress","position":{"start":{"line":3,"column":59,"offset":60},"end":{"line":3,"column":69,"offset":70},"indent":[]}},{"type":"text","value":" class adds a background color and aligns its children horizontally with flexbox. The children should be individually colored with ","position":{"start":{"line":3,"column":69,"offset":70},"end":{"line":3,"column":200,"offset":201},"indent":[]}},{"type":"link","title":null,"url":"/css/utilities/colors#background-colors","children":[{"type":"text","value":"background utilities","position":{"start":{"line":3,"column":201,"offset":202},"end":{"line":3,"column":221,"offset":222},"indent":[]}}],"position":{"start":{"line":3,"column":200,"offset":201},"end":{"line":3,"column":263,"offset":264},"indent":[]}},{"type":"text","value":" and sized with inline ","position":{"start":{"line":3,"column":263,"offset":264},"end":{"line":3,"column":286,"offset":287},"indent":[]}},{"type":"inlineCode","value":"width","position":{"start":{"line":3,"column":286,"offset":287},"end":{"line":3,"column":293,"offset":294},"indent":[]}},{"type":"text","value":" styles in percentages. Overflow is hidden, so children that overflow will be clipped.","position":{"start":{"line":3,"column":293,"offset":294},"end":{"line":3,"column":379,"offset":380},"indent":[]}}],"position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":379,"offset":380},"indent":[]}},{"type":"code","lang":"html","meta":null,"value":"<span class=\"Progress\">\n  <span class=\"bg-green\" style=\"width: 50%;\"></span>\n</span>","position":{"start":{"line":5,"column":1,"offset":382},"end":{"line":9,"column":4,"offset":478},"indent":[1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Large Progress","position":{"start":{"line":11,"column":4,"offset":483},"end":{"line":11,"column":18,"offset":497},"indent":[]}}],"position":{"start":{"line":11,"column":1,"offset":480},"end":{"line":11,"column":18,"offset":497},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Large progress bars are slightly taller than the default.","position":{"start":{"line":12,"column":1,"offset":498},"end":{"line":12,"column":58,"offset":555},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":498},"end":{"line":12,"column":58,"offset":555},"indent":[]}},{"type":"code","lang":"html","meta":null,"value":"<span class=\"Progress Progress--large\">\n  <span class=\"bg-green\" style=\"width: 50%;\"></span>\n</span>","position":{"start":{"line":14,"column":1,"offset":557},"end":{"line":18,"column":4,"offset":669},"indent":[1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Small Progress","position":{"start":{"line":20,"column":4,"offset":674},"end":{"line":20,"column":18,"offset":688},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":671},"end":{"line":20,"column":18,"offset":688},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Large progress bars are shorter than the default.","position":{"start":{"line":21,"column":1,"offset":689},"end":{"line":21,"column":50,"offset":738},"indent":[]}}],"position":{"start":{"line":21,"column":1,"offset":689},"end":{"line":21,"column":50,"offset":738},"indent":[]}},{"type":"code","lang":"html","meta":null,"value":"<span class=\"Progress Progress--small\">\n  <span class=\"bg-green\" style=\"width: 50%;\"></span>\n</span>","position":{"start":{"line":23,"column":1,"offset":740},"end":{"line":27,"column":4,"offset":852},"indent":[1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Inline Progress","position":{"start":{"line":29,"column":4,"offset":857},"end":{"line":29,"column":19,"offset":872},"indent":[]}}],"position":{"start":{"line":29,"column":1,"offset":854},"end":{"line":29,"column":19,"offset":872},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"For inline progress indicators, use the ","position":{"start":{"line":30,"column":1,"offset":873},"end":{"line":30,"column":41,"offset":913},"indent":[]}},{"type":"inlineCode","value":"Progress","position":{"start":{"line":30,"column":41,"offset":913},"end":{"line":30,"column":51,"offset":923},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":30,"column":51,"offset":923},"end":{"line":30,"column":56,"offset":928},"indent":[]}},{"type":"inlineCode","value":"d-inline-flex","position":{"start":{"line":30,"column":56,"offset":928},"end":{"line":30,"column":71,"offset":943},"indent":[]}},{"type":"text","value":" with an inline element such as ","position":{"start":{"line":30,"column":71,"offset":943},"end":{"line":30,"column":103,"offset":975},"indent":[]}},{"type":"inlineCode","value":"<span>","position":{"start":{"line":30,"column":103,"offset":975},"end":{"line":30,"column":111,"offset":983},"indent":[]}},{"type":"text","value":" and add a custom ","position":{"start":{"line":30,"column":111,"offset":983},"end":{"line":30,"column":129,"offset":1001},"indent":[]}},{"type":"inlineCode","value":"width","position":{"start":{"line":30,"column":129,"offset":1001},"end":{"line":30,"column":136,"offset":1008},"indent":[]}},{"type":"text","value":" style:","position":{"start":{"line":30,"column":136,"offset":1008},"end":{"line":30,"column":143,"offset":1015},"indent":[]}}],"position":{"start":{"line":30,"column":1,"offset":873},"end":{"line":30,"column":143,"offset":1015},"indent":[]}},{"type":"code","lang":"html","meta":null,"value":"<span class=\"text-small text-gray mr-2\">4 of 16</span>\n<span class=\"Progress d-inline-flex\" style=\"width: 160px\">\n  <div class=\"bg-green\" style=\"width: 25%\"></div>\n</span>","position":{"start":{"line":32,"column":1,"offset":1017},"end":{"line":37,"column":4,"offset":1200},"indent":[1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Accessibility","position":{"start":{"line":39,"column":4,"offset":1205},"end":{"line":39,"column":17,"offset":1218},"indent":[]}}],"position":{"start":{"line":39,"column":1,"offset":1202},"end":{"line":39,"column":17,"offset":1218},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"In cases where it's not possible to describe the progress in text, provide an ","position":{"start":{"line":40,"column":1,"offset":1219},"end":{"line":40,"column":79,"offset":1297},"indent":[]}},{"type":"inlineCode","value":"aria-label","position":{"start":{"line":40,"column":79,"offset":1297},"end":{"line":40,"column":91,"offset":1309},"indent":[]}},{"type":"text","value":" attribute that does so:","position":{"start":{"line":40,"column":91,"offset":1309},"end":{"line":40,"column":115,"offset":1333},"indent":[]}}],"position":{"start":{"line":40,"column":1,"offset":1219},"end":{"line":40,"column":115,"offset":1333},"indent":[]}},{"type":"code","lang":"html","meta":null,"value":"<div aria-label=\"tasks: 8 of 10 complete\">\n  <span class=\"Progress\">\n    <span class=\"bg-green\" style=\"width: 80%;\"></span>\n  </span>\n</div>","position":{"start":{"line":42,"column":1,"offset":1335},"end":{"line":48,"column":4,"offset":1487},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Progress with multiple values","position":{"start":{"line":50,"column":4,"offset":1492},"end":{"line":50,"column":33,"offset":1521},"indent":[]}}],"position":{"start":{"line":50,"column":1,"offset":1489},"end":{"line":50,"column":33,"offset":1521},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"To show the progress of tasks in multiple states (such as \"done\", \"in progress\", and \"open\"), use distinct background color utilities and give each one a percentage width proportional to the total number. Children are stacked from left to right, so if your widths add up to 100%, your bars will too.","position":{"start":{"line":51,"column":1,"offset":1522},"end":{"line":51,"column":300,"offset":1821},"indent":[]}}],"position":{"start":{"line":51,"column":1,"offset":1522},"end":{"line":51,"column":300,"offset":1821},"indent":[]}},{"type":"code","lang":"html","meta":null,"value":"<div class=\"tooltipped tooltipped-n\" aria-label=\"tasks: 80 done, 14 in progress, 6 open\">\n  <span class=\"Progress\">\n    <span class=\"bg-green\" style=\"width: 80%;\"></span>\n    <span class=\"bg-purple\" style=\"width: 14%;\"></span>\n    <span class=\"bg-red\" style=\"width: 6%;\"></span>\n  </span>\n</div>","position":{"start":{"line":53,"column":1,"offset":1823},"end":{"line":61,"column":4,"offset":2130},"indent":[1,1,1,1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"Progress\",\"path\":\"components/progress\",\"status\":\"New Release\",\"source\":\"https://github.com/primer/css/tree/master/src/progress\",\"bundle\":\"progress\"}","position":{"start":{"line":65,"column":1,"offset":2134},"end":{"line":65,"column":187,"offset":2320},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":65,"column":187,"offset":2320}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {\"title\":\"Progress\",\"path\":\"components/progress\",\"status\":\"New Release\",\"source\":\"https://github.com/primer/css/tree/master/src/progress\",\"bundle\":\"progress\"}\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`Use Progress components to visualize task completion. The `}<inlineCode parentName=\"p\">{`Progress`}</inlineCode>{` class adds a background color and aligns its children horizontally with flexbox. The children should be individually colored with `}<a parentName=\"p\" {...{\n        \"href\": \"/css/utilities/colors#background-colors\"\n      }}>{`background utilities`}</a>{` and sized with inline `}<inlineCode parentName=\"p\">{`width`}</inlineCode>{` styles in percentages. Overflow is hidden, so children that overflow will be clipped.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`<span class=\"Progress\">\n  <span class=\"bg-green\" style=\"width: 50%;\"></span>\n</span>\n`}</code></pre>\n    <h2>{`Large Progress`}</h2>\n    <p>{`Large progress bars are slightly taller than the default.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`<span class=\"Progress Progress--large\">\n  <span class=\"bg-green\" style=\"width: 50%;\"></span>\n</span>\n`}</code></pre>\n    <h2>{`Small Progress`}</h2>\n    <p>{`Large progress bars are shorter than the default.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`<span class=\"Progress Progress--small\">\n  <span class=\"bg-green\" style=\"width: 50%;\"></span>\n</span>\n`}</code></pre>\n    <h2>{`Inline Progress`}</h2>\n    <p>{`For inline progress indicators, use the `}<inlineCode parentName=\"p\">{`Progress`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`d-inline-flex`}</inlineCode>{` with an inline element such as `}<inlineCode parentName=\"p\">{`<span>`}</inlineCode>{` and add a custom `}<inlineCode parentName=\"p\">{`width`}</inlineCode>{` style:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`<span class=\"text-small text-gray mr-2\">4 of 16</span>\n<span class=\"Progress d-inline-flex\" style=\"width: 160px\">\n  <div class=\"bg-green\" style=\"width: 25%\"></div>\n</span>\n`}</code></pre>\n    <h2>{`Accessibility`}</h2>\n    <p>{`In cases where it's not possible to describe the progress in text, provide an `}<inlineCode parentName=\"p\">{`aria-label`}</inlineCode>{` attribute that does so:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`<div aria-label=\"tasks: 8 of 10 complete\">\n  <span class=\"Progress\">\n    <span class=\"bg-green\" style=\"width: 80%;\"></span>\n  </span>\n</div>\n`}</code></pre>\n    <h2>{`Progress with multiple values`}</h2>\n    <p>{`To show the progress of tasks in multiple states (such as \"done\", \"in progress\", and \"open\"), use distinct background color utilities and give each one a percentage width proportional to the total number. Children are stacked from left to right, so if your widths add up to 100%, your bars will too.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`<div class=\"tooltipped tooltipped-n\" aria-label=\"tasks: 80 done, 14 in progress, 6 open\">\n  <span class=\"Progress\">\n    <span class=\"bg-green\" style=\"width: 80%;\"></span>\n    <span class=\"bg-purple\" style=\"width: 14%;\"></span>\n    <span class=\"bg-red\" style=\"width: 6%;\"></span>\n  </span>\n</div>\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;"}}