{"expireTime":9007200815030642000,"key":"gatsby-mdx-entire-payload-6ecab0a37493847633dd85f370f39a62-","val":{"mdast":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"{:toc}","position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":7,"offset":7},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":7,"offset":7},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Our breakpoints are based on screen widths where our content starts to break. Since most of GitHub is currently a fixed-width with we use pixel widths to make it easy for us to match page widths for responsive and non-responsive pages. ","position":{"start":{"line":4,"column":1,"offset":9},"end":{"line":4,"column":237,"offset":245},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"Our breakpoints may change as we move more of the product into responsive layouts.","position":{"start":{"line":4,"column":239,"offset":247},"end":{"line":4,"column":321,"offset":329},"indent":[]}}],"position":{"start":{"line":4,"column":237,"offset":245},"end":{"line":4,"column":323,"offset":331},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":9},"end":{"line":4,"column":323,"offset":331},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"We use abbreviations for each breakpoint to keep the class names concise. This abbreviated syntax is used consistently across responsive styles. Responsive styles allow you to change the styles properties at each breakpoint. For example, when using column widths for grid layouts, you can change specify that the width is 12 columns wide at the small breakpoint, and 6 columns wide from the large breakpoint: ","position":{"start":{"line":6,"column":1,"offset":333},"end":{"line":6,"column":410,"offset":742},"indent":[]}},{"type":"inlineCode","value":"<div class=\"col-sm-12 col-lg-6\">...</div>","position":{"start":{"line":6,"column":410,"offset":742},"end":{"line":6,"column":453,"offset":785},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":333},"end":{"line":6,"column":453,"offset":785},"indent":[]}},{"type":"table","align":[null,null,null],"children":[{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"Breakpoint","position":{"start":{"line":8,"column":3,"offset":789},"end":{"line":8,"column":13,"offset":799},"indent":[]}}],"position":{"start":{"line":8,"column":3,"offset":789},"end":{"line":8,"column":13,"offset":799},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Syntax","position":{"start":{"line":8,"column":16,"offset":802},"end":{"line":8,"column":22,"offset":808},"indent":[]}}],"position":{"start":{"line":8,"column":16,"offset":802},"end":{"line":8,"column":22,"offset":808},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Description","position":{"start":{"line":8,"column":25,"offset":811},"end":{"line":8,"column":36,"offset":822},"indent":[]}}],"position":{"start":{"line":8,"column":25,"offset":811},"end":{"line":8,"column":36,"offset":822},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":787},"end":{"line":8,"column":38,"offset":824},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"Small","position":{"start":{"line":10,"column":3,"offset":847},"end":{"line":10,"column":8,"offset":852},"indent":[]}}],"position":{"start":{"line":10,"column":3,"offset":847},"end":{"line":10,"column":8,"offset":852},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"sm","position":{"start":{"line":10,"column":11,"offset":855},"end":{"line":10,"column":13,"offset":857},"indent":[]}}],"position":{"start":{"line":10,"column":11,"offset":855},"end":{"line":10,"column":13,"offset":857},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"min-width: 544px","position":{"start":{"line":10,"column":16,"offset":860},"end":{"line":10,"column":32,"offset":876},"indent":[]}}],"position":{"start":{"line":10,"column":16,"offset":860},"end":{"line":10,"column":32,"offset":876},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":845},"end":{"line":10,"column":34,"offset":878},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"Medium","position":{"start":{"line":11,"column":3,"offset":881},"end":{"line":11,"column":9,"offset":887},"indent":[]}}],"position":{"start":{"line":11,"column":3,"offset":881},"end":{"line":11,"column":9,"offset":887},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"md","position":{"start":{"line":11,"column":12,"offset":890},"end":{"line":11,"column":14,"offset":892},"indent":[]}}],"position":{"start":{"line":11,"column":12,"offset":890},"end":{"line":11,"column":14,"offset":892},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"min-width: 768px","position":{"start":{"line":11,"column":17,"offset":895},"end":{"line":11,"column":33,"offset":911},"indent":[]}}],"position":{"start":{"line":11,"column":17,"offset":895},"end":{"line":11,"column":33,"offset":911},"indent":[]}}],"position":{"start":{"line":11,"column":1,"offset":879},"end":{"line":11,"column":35,"offset":913},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"Large","position":{"start":{"line":12,"column":3,"offset":916},"end":{"line":12,"column":8,"offset":921},"indent":[]}}],"position":{"start":{"line":12,"column":3,"offset":916},"end":{"line":12,"column":8,"offset":921},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"lg","position":{"start":{"line":12,"column":11,"offset":924},"end":{"line":12,"column":13,"offset":926},"indent":[]}}],"position":{"start":{"line":12,"column":11,"offset":924},"end":{"line":12,"column":13,"offset":926},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"min-width: 1012px","position":{"start":{"line":12,"column":16,"offset":929},"end":{"line":12,"column":33,"offset":946},"indent":[]}}],"position":{"start":{"line":12,"column":16,"offset":929},"end":{"line":12,"column":33,"offset":946},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":914},"end":{"line":12,"column":35,"offset":948},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"Extra-large","position":{"start":{"line":13,"column":3,"offset":951},"end":{"line":13,"column":14,"offset":962},"indent":[]}}],"position":{"start":{"line":13,"column":3,"offset":951},"end":{"line":13,"column":14,"offset":962},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"xl","position":{"start":{"line":13,"column":17,"offset":965},"end":{"line":13,"column":19,"offset":967},"indent":[]}}],"position":{"start":{"line":13,"column":17,"offset":965},"end":{"line":13,"column":19,"offset":967},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"min-width: 1280px","position":{"start":{"line":13,"column":22,"offset":970},"end":{"line":13,"column":39,"offset":987},"indent":[]}}],"position":{"start":{"line":13,"column":22,"offset":970},"end":{"line":13,"column":39,"offset":987},"indent":[]}}],"position":{"start":{"line":13,"column":1,"offset":949},"end":{"line":13,"column":41,"offset":989},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":787},"end":{"line":13,"column":41,"offset":989},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Note:","position":{"start":{"line":15,"column":3,"offset":993},"end":{"line":15,"column":8,"offset":998},"indent":[]}}],"position":{"start":{"line":15,"column":1,"offset":991},"end":{"line":15,"column":10,"offset":1000},"indent":[]}},{"type":"text","value":" The ","position":{"start":{"line":15,"column":10,"offset":1000},"end":{"line":15,"column":15,"offset":1005},"indent":[]}},{"type":"inlineCode","value":"lg","position":{"start":{"line":15,"column":15,"offset":1005},"end":{"line":15,"column":19,"offset":1009},"indent":[]}},{"type":"text","value":" breakpoint matches our current page width of ","position":{"start":{"line":15,"column":19,"offset":1009},"end":{"line":15,"column":65,"offset":1055},"indent":[]}},{"type":"inlineCode","value":"980px","position":{"start":{"line":15,"column":65,"offset":1055},"end":{"line":15,"column":72,"offset":1062},"indent":[]}},{"type":"text","value":" including left and right padding of ","position":{"start":{"line":15,"column":72,"offset":1062},"end":{"line":15,"column":109,"offset":1099},"indent":[]}},{"type":"inlineCode","value":"16px","position":{"start":{"line":15,"column":109,"offset":1099},"end":{"line":15,"column":115,"offset":1105},"indent":[]}},{"type":"text","value":" (","position":{"start":{"line":15,"column":115,"offset":1105},"end":{"line":15,"column":117,"offset":1107},"indent":[]}},{"type":"inlineCode","value":"$spacer-3","position":{"start":{"line":15,"column":117,"offset":1107},"end":{"line":15,"column":128,"offset":1118},"indent":[]}},{"type":"text","value":"). This is so that content doesn't touch the edges of the window when resized.","position":{"start":{"line":15,"column":128,"offset":1118},"end":{"line":15,"column":206,"offset":1196},"indent":[]}}],"position":{"start":{"line":15,"column":1,"offset":991},"end":{"line":15,"column":206,"offset":1196},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Responsive styles are available for ","position":{"start":{"line":17,"column":1,"offset":1198},"end":{"line":17,"column":37,"offset":1234},"indent":[]}},{"type":"link","title":null,"url":"/css/utilities/margin#responsive-margins","children":[{"type":"text","value":"margin","position":{"start":{"line":17,"column":38,"offset":1235},"end":{"line":17,"column":44,"offset":1241},"indent":[]}}],"position":{"start":{"line":17,"column":37,"offset":1234},"end":{"line":17,"column":87,"offset":1284},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":17,"column":87,"offset":1284},"end":{"line":17,"column":89,"offset":1286},"indent":[]}},{"type":"link","title":null,"url":"/css/utilities/padding#responsive-padding","children":[{"type":"text","value":"padding","position":{"start":{"line":17,"column":90,"offset":1287},"end":{"line":17,"column":97,"offset":1294},"indent":[]}}],"position":{"start":{"line":17,"column":89,"offset":1286},"end":{"line":17,"column":141,"offset":1338},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":17,"column":141,"offset":1338},"end":{"line":17,"column":143,"offset":1340},"indent":[]}},{"type":"link","title":null,"url":"/css/utilities/layout","children":[{"type":"text","value":"layout","position":{"start":{"line":17,"column":144,"offset":1341},"end":{"line":17,"column":150,"offset":1347},"indent":[]}}],"position":{"start":{"line":17,"column":143,"offset":1340},"end":{"line":17,"column":174,"offset":1371},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":17,"column":174,"offset":1371},"end":{"line":17,"column":176,"offset":1373},"indent":[]}},{"type":"link","title":null,"url":"/css/utilities/flexbox#responsive-flex-utilities","children":[{"type":"text","value":"flexbox","position":{"start":{"line":17,"column":177,"offset":1374},"end":{"line":17,"column":184,"offset":1381},"indent":[]}}],"position":{"start":{"line":17,"column":176,"offset":1373},"end":{"line":17,"column":235,"offset":1432},"indent":[]}},{"type":"text","value":", and the ","position":{"start":{"line":17,"column":235,"offset":1432},"end":{"line":17,"column":245,"offset":1442},"indent":[]}},{"type":"link","title":null,"url":"/css/objects/grid#responsive-grids","children":[{"type":"text","value":"grid","position":{"start":{"line":17,"column":246,"offset":1443},"end":{"line":17,"column":250,"offset":1447},"indent":[]}}],"position":{"start":{"line":17,"column":245,"offset":1442},"end":{"line":17,"column":287,"offset":1484},"indent":[]}},{"type":"text","value":" system.","position":{"start":{"line":17,"column":287,"offset":1484},"end":{"line":17,"column":295,"offset":1492},"indent":[]}}],"position":{"start":{"line":17,"column":1,"offset":1198},"end":{"line":17,"column":295,"offset":1492},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Breakpoint variables","position":{"start":{"line":19,"column":4,"offset":1497},"end":{"line":19,"column":24,"offset":1517},"indent":[]}}],"position":{"start":{"line":19,"column":1,"offset":1494},"end":{"line":19,"column":24,"offset":1517},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The above values are defined as variables, and then put into a Sass map that generates the media query mixin.","position":{"start":{"line":21,"column":1,"offset":1519},"end":{"line":21,"column":110,"offset":1628},"indent":[]}}],"position":{"start":{"line":21,"column":1,"offset":1519},"end":{"line":21,"column":110,"offset":1628},"indent":[]}},{"type":"code","lang":"scss","meta":null,"value":"// breakpoints\n$width-xs: 0;\n$width-sm: 544px;\n$width-md: 768px;\n$width-lg: 1012px;\n$width-xl: 1280px;\n\n$breakpoints: (\n  // Small screen / phone\n  sm: $width-sm,\n  // Medium screen / tablet\n  md: $width-md,\n  // Large screen / desktop (980 + (12 * 2)) <= container + gutters\n  lg: $width-lg,\n  // Extra large screen / wide desktop\n  xl: $width-xl\n) !default;","position":{"start":{"line":23,"column":1,"offset":1630},"end":{"line":41,"column":4,"offset":2001},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Media query mixins","position":{"start":{"line":43,"column":4,"offset":2006},"end":{"line":43,"column":22,"offset":2024},"indent":[]}}],"position":{"start":{"line":43,"column":1,"offset":2003},"end":{"line":43,"column":22,"offset":2024},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Use media query mixins when you want to change CSS properties at a particular breakpoint. The media query mixin works by passing in a breakpoint value, such as ","position":{"start":{"line":44,"column":1,"offset":2025},"end":{"line":44,"column":161,"offset":2185},"indent":[]}},{"type":"inlineCode","value":"breakpoint(md)","position":{"start":{"line":44,"column":161,"offset":2185},"end":{"line":44,"column":177,"offset":2201},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":44,"column":177,"offset":2201},"end":{"line":44,"column":178,"offset":2202},"indent":[]}}],"position":{"start":{"line":44,"column":1,"offset":2025},"end":{"line":44,"column":178,"offset":2202},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Media queries are scoped from each breakpoint and upwards. In the example below, the font size is ","position":{"start":{"line":46,"column":1,"offset":2204},"end":{"line":46,"column":99,"offset":2302},"indent":[]}},{"type":"inlineCode","value":"28px","position":{"start":{"line":46,"column":99,"offset":2302},"end":{"line":46,"column":105,"offset":2308},"indent":[]}},{"type":"text","value":" until the viewport size meets the ","position":{"start":{"line":46,"column":105,"offset":2308},"end":{"line":46,"column":140,"offset":2343},"indent":[]}},{"type":"inlineCode","value":"lg","position":{"start":{"line":46,"column":140,"offset":2343},"end":{"line":46,"column":144,"offset":2347},"indent":[]}},{"type":"text","value":" breakpoint, from there upwards—including through the ","position":{"start":{"line":46,"column":144,"offset":2347},"end":{"line":46,"column":198,"offset":2401},"indent":[]}},{"type":"inlineCode","value":"xl","position":{"start":{"line":46,"column":198,"offset":2401},"end":{"line":46,"column":202,"offset":2405},"indent":[]}},{"type":"text","value":" breakpoint—the font size will be ","position":{"start":{"line":46,"column":202,"offset":2405},"end":{"line":46,"column":236,"offset":2439},"indent":[]}},{"type":"inlineCode","value":"32px","position":{"start":{"line":46,"column":236,"offset":2439},"end":{"line":46,"column":242,"offset":2445},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":46,"column":242,"offset":2445},"end":{"line":46,"column":243,"offset":2446},"indent":[]}}],"position":{"start":{"line":46,"column":1,"offset":2204},"end":{"line":46,"column":243,"offset":2446},"indent":[]}},{"type":"code","lang":"scss","meta":null,"value":".styles {\n  font-size: 28px;\n  @include breakpoint(md) { font-size: 32px; }\n}","position":{"start":{"line":48,"column":1,"offset":2448},"end":{"line":53,"column":4,"offset":2537},"indent":[1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Responsive variants","position":{"start":{"line":55,"column":4,"offset":2542},"end":{"line":55,"column":23,"offset":2561},"indent":[]}}],"position":{"start":{"line":55,"column":1,"offset":2539},"end":{"line":55,"column":23,"offset":2561},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The ","position":{"start":{"line":56,"column":1,"offset":2562},"end":{"line":56,"column":5,"offset":2566},"indent":[]}},{"type":"inlineCode","value":"$responsive-variants","position":{"start":{"line":56,"column":5,"offset":2566},"end":{"line":56,"column":27,"offset":2588},"indent":[]}},{"type":"text","value":" variable is a mapping of breakpoints to classname variants, and should be used like so:","position":{"start":{"line":56,"column":27,"offset":2588},"end":{"line":56,"column":115,"offset":2676},"indent":[]}}],"position":{"start":{"line":56,"column":1,"offset":2562},"end":{"line":56,"column":115,"offset":2676},"indent":[]}},{"type":"code","lang":"scss","meta":null,"value":"@each $breakpoint, $variant in $responsive-variants {\n  @include breakpoint($breakpoint) {\n    // Note: the first iteration gets `$variant == \"\"`\n    .overflow#{$variant}-auto { overflow: auto; }\n  }\n}","position":{"start":{"line":58,"column":1,"offset":2678},"end":{"line":65,"column":4,"offset":2891},"indent":[1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"The resulting CSS would be:","position":{"start":{"line":67,"column":1,"offset":2893},"end":{"line":67,"column":28,"offset":2920},"indent":[]}}],"position":{"start":{"line":67,"column":1,"offset":2893},"end":{"line":67,"column":28,"offset":2920},"indent":[]}},{"type":"code","lang":"css","meta":null,"value":".overflow-auto { overflow: auto; }\n@media (min-width: 544px) { .overflow-sm-auto { overflow: auto; } }\n@media (min-width: 768px) { .overflow-md-auto { overflow: auto; } }\n@media (min-width: 1012px) { .overflow-lg-auto { overflow: auto; } }\n@media (min-width: 1280px) { .overflow-xl-auto { overflow: auto; } }","position":{"start":{"line":69,"column":1,"offset":2922},"end":{"line":75,"column":4,"offset":3241},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"Caution!","position":{"start":{"line":77,"column":6,"offset":3248},"end":{"line":77,"column":14,"offset":3256},"indent":[]}}],"position":{"start":{"line":77,"column":1,"offset":3243},"end":{"line":77,"column":14,"offset":3256},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Don't precede the ","position":{"start":{"line":78,"column":4,"offset":3260},"end":{"line":78,"column":22,"offset":3278},"indent":[]}},{"type":"inlineCode","value":"#{$variation}","position":{"start":{"line":78,"column":22,"offset":3278},"end":{"line":78,"column":37,"offset":3293},"indent":[]}},{"type":"text","value":" interpolation with a hyphen because the first value of ","position":{"start":{"line":78,"column":37,"offset":3293},"end":{"line":78,"column":93,"offset":3349},"indent":[]}},{"type":"inlineCode","value":"$variant","position":{"start":{"line":78,"column":93,"offset":3349},"end":{"line":78,"column":103,"offset":3359},"indent":[]}},{"type":"text","value":" will be an empty string.","position":{"start":{"line":78,"column":103,"offset":3359},"end":{"line":78,"column":128,"offset":3384},"indent":[]}}],"position":{"start":{"line":78,"column":4,"offset":3260},"end":{"line":78,"column":128,"offset":3384},"indent":[]}}],"position":{"start":{"line":78,"column":1,"offset":3257},"end":{"line":78,"column":128,"offset":3384},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"For consistency, please put the ","position":{"start":{"line":79,"column":4,"offset":3388},"end":{"line":79,"column":36,"offset":3420},"indent":[]}},{"type":"inlineCode","value":"@include breakpoint($breakpoint)","position":{"start":{"line":79,"column":36,"offset":3420},"end":{"line":79,"column":70,"offset":3454},"indent":[]}},{"type":"text","value":" call directly inside the ","position":{"start":{"line":79,"column":70,"offset":3454},"end":{"line":79,"column":96,"offset":3480},"indent":[]}},{"type":"inlineCode","value":"$responsive-variants","position":{"start":{"line":79,"column":96,"offset":3480},"end":{"line":79,"column":118,"offset":3502},"indent":[]}},{"type":"text","value":" loop. This will help keep file sizes small by \"batching\" selectors in shared ","position":{"start":{"line":79,"column":118,"offset":3502},"end":{"line":79,"column":196,"offset":3580},"indent":[]}},{"type":"inlineCode","value":"@media","position":{"start":{"line":79,"column":196,"offset":3580},"end":{"line":79,"column":204,"offset":3588},"indent":[]}},{"type":"text","value":" queries.","position":{"start":{"line":79,"column":204,"offset":3588},"end":{"line":79,"column":213,"offset":3597},"indent":[]}}],"position":{"start":{"line":79,"column":4,"offset":3388},"end":{"line":79,"column":213,"offset":3597},"indent":[]}}],"position":{"start":{"line":79,"column":1,"offset":3385},"end":{"line":79,"column":213,"offset":3597},"indent":[]}}],"position":{"start":{"line":78,"column":1,"offset":3257},"end":{"line":79,"column":213,"offset":3597},"indent":[1]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"Breakpoints\",\"path\":\"support/breakpoints\",\"status\":\"Stable\",\"source\":\"https://github.com/primer/css/blob/master/src/support/variables/layout.scss\",\"bundle\":\"support\"}","position":{"start":{"line":82,"column":1,"offset":3600},"end":{"line":82,"column":205,"offset":3804},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":82,"column":205,"offset":3804}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {\"title\":\"Breakpoints\",\"path\":\"support/breakpoints\",\"status\":\"Stable\",\"source\":\"https://github.com/primer/css/blob/master/src/support/variables/layout.scss\",\"bundle\":\"support\"}\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`{:toc}`}</p>\n    <p>{`Our breakpoints are based on screen widths where our content starts to break. Since most of GitHub is currently a fixed-width with we use pixel widths to make it easy for us to match page widths for responsive and non-responsive pages. `}<strong parentName=\"p\">{`Our breakpoints may change as we move more of the product into responsive layouts.`}</strong></p>\n    <p>{`We use abbreviations for each breakpoint to keep the class names concise. This abbreviated syntax is used consistently across responsive styles. Responsive styles allow you to change the styles properties at each breakpoint. For example, when using column widths for grid layouts, you can change specify that the width is 12 columns wide at the small breakpoint, and 6 columns wide from the large breakpoint: `}<inlineCode parentName=\"p\">{`<div class=\"col-sm-12 col-lg-6\">...</div>`}</inlineCode></p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Breakpoint`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Syntax`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Small`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`sm`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`min-width: 544px`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Medium`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`md`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`min-width: 768px`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Large`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`lg`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`min-width: 1012px`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Extra-large`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`xl`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`min-width: 1280px`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <p><strong parentName=\"p\">{`Note:`}</strong>{` The `}<inlineCode parentName=\"p\">{`lg`}</inlineCode>{` breakpoint matches our current page width of `}<inlineCode parentName=\"p\">{`980px`}</inlineCode>{` including left and right padding of `}<inlineCode parentName=\"p\">{`16px`}</inlineCode>{` (`}<inlineCode parentName=\"p\">{`$spacer-3`}</inlineCode>{`). This is so that content doesn't touch the edges of the window when resized.`}</p>\n    <p>{`Responsive styles are available for `}<a parentName=\"p\" {...{\n        \"href\": \"/css/utilities/margin#responsive-margins\"\n      }}>{`margin`}</a>{`, `}<a parentName=\"p\" {...{\n        \"href\": \"/css/utilities/padding#responsive-padding\"\n      }}>{`padding`}</a>{`, `}<a parentName=\"p\" {...{\n        \"href\": \"/css/utilities/layout\"\n      }}>{`layout`}</a>{`, `}<a parentName=\"p\" {...{\n        \"href\": \"/css/utilities/flexbox#responsive-flex-utilities\"\n      }}>{`flexbox`}</a>{`, and the `}<a parentName=\"p\" {...{\n        \"href\": \"/css/objects/grid#responsive-grids\"\n      }}>{`grid`}</a>{` system.`}</p>\n    <h2>{`Breakpoint variables`}</h2>\n    <p>{`The above values are defined as variables, and then put into a Sass map that generates the media query mixin.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-scss\"\n      }}>{`// breakpoints\n$width-xs: 0;\n$width-sm: 544px;\n$width-md: 768px;\n$width-lg: 1012px;\n$width-xl: 1280px;\n\n$breakpoints: (\n  // Small screen / phone\n  sm: $width-sm,\n  // Medium screen / tablet\n  md: $width-md,\n  // Large screen / desktop (980 + (12 * 2)) <= container + gutters\n  lg: $width-lg,\n  // Extra large screen / wide desktop\n  xl: $width-xl\n) !default;\n`}</code></pre>\n    <h2>{`Media query mixins`}</h2>\n    <p>{`Use media query mixins when you want to change CSS properties at a particular breakpoint. The media query mixin works by passing in a breakpoint value, such as `}<inlineCode parentName=\"p\">{`breakpoint(md)`}</inlineCode>{`.`}</p>\n    <p>{`Media queries are scoped from each breakpoint and upwards. In the example below, the font size is `}<inlineCode parentName=\"p\">{`28px`}</inlineCode>{` until the viewport size meets the `}<inlineCode parentName=\"p\">{`lg`}</inlineCode>{` breakpoint, from there upwards—including through the `}<inlineCode parentName=\"p\">{`xl`}</inlineCode>{` breakpoint—the font size will be `}<inlineCode parentName=\"p\">{`32px`}</inlineCode>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-scss\"\n      }}>{`.styles {\n  font-size: 28px;\n  @include breakpoint(md) { font-size: 32px; }\n}\n`}</code></pre>\n    <h2>{`Responsive variants`}</h2>\n    <p>{`The `}<inlineCode parentName=\"p\">{`$responsive-variants`}</inlineCode>{` variable is a mapping of breakpoints to classname variants, and should be used like so:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-scss\"\n      }}>{`@each $breakpoint, $variant in $responsive-variants {\n  @include breakpoint($breakpoint) {\n    // Note: the first iteration gets \\`$variant == \"\"\\`\n    .overflow#{$variant}-auto { overflow: auto; }\n  }\n}\n`}</code></pre>\n    <p>{`The resulting CSS would be:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-css\"\n      }}>{`.overflow-auto { overflow: auto; }\n@media (min-width: 544px) { .overflow-sm-auto { overflow: auto; } }\n@media (min-width: 768px) { .overflow-md-auto { overflow: auto; } }\n@media (min-width: 1012px) { .overflow-lg-auto { overflow: auto; } }\n@media (min-width: 1280px) { .overflow-xl-auto { overflow: auto; } }\n`}</code></pre>\n    <h4>{`Caution!`}</h4>\n    <ol>\n      <li parentName=\"ol\">{`Don't precede the `}<inlineCode parentName=\"li\">{`#{$variation}`}</inlineCode>{` interpolation with a hyphen because the first value of `}<inlineCode parentName=\"li\">{`$variant`}</inlineCode>{` will be an empty string.`}</li>\n      <li parentName=\"ol\">{`For consistency, please put the `}<inlineCode parentName=\"li\">{`@include breakpoint($breakpoint)`}</inlineCode>{` call directly inside the `}<inlineCode parentName=\"li\">{`$responsive-variants`}</inlineCode>{` loop. This will help keep file sizes small by \"batching\" selectors in shared `}<inlineCode parentName=\"li\">{`@media`}</inlineCode>{` queries.`}</li>\n    </ol>\n\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;"}}