{"expireTime":9007200815030641000,"key":"gatsby-mdx-entire-payload-eb356c64038eeb543da9622c0c17e2cd-","val":{"mdast":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"Components make it easier to mark up a set of elements that are commonly grouped together with similar visual styles. Their base styles are shared and variants are added with modifier classes, so usually components are comprised of multiple classes. Most importantly, components should be highly reusable across the site, rather than built for specific pages or features. To achieve this:","position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":389,"offset":389},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":389,"offset":389},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Separate structure and skin:","position":{"start":{"line":4,"column":5,"offset":395},"end":{"line":4,"column":33,"offset":423},"indent":[]}}],"position":{"start":{"line":4,"column":3,"offset":393},"end":{"line":4,"column":35,"offset":425},"indent":[]}},{"type":"text","value":" This means to define repeating visual features (like background and border styles) as separate “skins” that you can mix-and-match with your various components to achieve a large amount of visual variety without much code.","position":{"start":{"line":4,"column":35,"offset":425},"end":{"line":4,"column":257,"offset":647},"indent":[]}}],"position":{"start":{"line":4,"column":3,"offset":393},"end":{"line":4,"column":257,"offset":647},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":391},"end":{"line":4,"column":257,"offset":647},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Separate container and content:","position":{"start":{"line":5,"column":5,"offset":652},"end":{"line":5,"column":36,"offset":683},"indent":[]}}],"position":{"start":{"line":5,"column":3,"offset":650},"end":{"line":5,"column":38,"offset":685},"indent":[]}},{"type":"text","value":" Essentially, this means “rarely use location-dependent styles”. A component should look the same no matter where you put it.","position":{"start":{"line":5,"column":38,"offset":685},"end":{"line":5,"column":163,"offset":810},"indent":[]}}],"position":{"start":{"line":5,"column":3,"offset":650},"end":{"line":5,"column":163,"offset":810},"indent":[]}}],"position":{"start":{"line":5,"column":1,"offset":648},"end":{"line":5,"column":163,"offset":810},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":391},"end":{"line":5,"column":163,"offset":810},"indent":[1]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"Components\",\"path\":\"components/index\"}","position":{"start":{"line":8,"column":1,"offset":813},"end":{"line":8,"column":77,"offset":889},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":8,"column":77,"offset":889}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {\"title\":\"Components\",\"path\":\"components/index\"}\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`Components make it easier to mark up a set of elements that are commonly grouped together with similar visual styles. Their base styles are shared and variants are added with modifier classes, so usually components are comprised of multiple classes. Most importantly, components should be highly reusable across the site, rather than built for specific pages or features. To achieve this:`}</p>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Separate structure and skin:`}</strong>{` This means to define repeating visual features (like background and border styles) as separate “skins” that you can mix-and-match with your various components to achieve a large amount of visual variety without much code.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Separate container and content:`}</strong>{` Essentially, this means “rarely use location-dependent styles”. A component should look the same no matter where you put it.`}</li>\n    </ul>\n\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;"}}