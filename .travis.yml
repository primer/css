language: node_js
node_js:
  - 10

env:
  global:
    # github
    - secure: "J+1oWjvvXjyrwkY/4IFWKdN/weFmQcPwlRuFG4R0Gb3rYe4nqtC9l68sJvmS8asc8dQMhOhcUZCH6sjvo7l2WD4NuK4umPSbs+rJNUsfbvH4pZjStQIj/3ll1OfQelGDWAYQWhIfciYY4F3Bp0ZWTfKOppLQ2AVIYu1fPVXDdlo="
    # github changelog
    - secure: "KcGydAqL7ryDh2rTJJB4wU8NE5BRtnrRXDEcPBScSscO3zFsHXHBDvvO04B/9hFVatXzGYXmkn+FZ0P9QikhvebzdwwyqUG2SKFiHhMvbX0m0WtAhn5NqDuKU1r5qy5YQ18r/tiLfC9GSAlEpfLAH58pwpcn8srV3Mn/yKvlrfs="

install:
  # by default, Travis runs npm ci, which... fails.
  # --no-package-lock prevents npm from updating it, which in
  # turn prevents lerna from publishing
  - npm install --no-package-lock

script:
  - script/check-versions
  - npm test

after_success:
  # this will short-circuit the publish step if it fails to interpolate $NPM_API_KEY
  - npm config set "//registry.npmjs.org/:_authToken=\${NPM_API_KEY}"
  # fetch tags for lerna
  - get fetch --tags

deploy:
  # publish canary releases on all branches
  - provider: script
    script: npm run release-pr
    skip_cleanup: true
    on:
      all_branches: true
      tags: false

  # publish release candidates on release branches
  - provider: script
    script: npm run release-candidate
    skip_cleanup: true
    on:
      branch: release*
      tags: false

  # publish "final" releases on master
  - provider: script
    script: npm run release
    skip_cleanup: true
    on:
      branch: master
      tags: false

notifications:
  slack:
    secure: W9lPRuuPMNwElkXZ8UZtu5phgUNleDCK0PgERa28dkh5b0Y9xzRpIQPRJfqVYAPtnMVXhfYcqryMzA4oj0E4fc7OxQsKmMeF1OcTuj5N4CM5xXR/qXDehOUTp6fpCToIX9d4hZ2H///PCExpul3TcfxYJe6EWQCHYd1n6zKRl8g=
