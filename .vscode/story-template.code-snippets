{
    "story-template": {
        "prefix": "story-template",
        "body": [
            "import React from 'react'",
            "import clsx from 'clsx'",
            "// import { StoryTemplateName } from './OtherStoryFile.stories' // import stories for component compositions",
            "",
            "export default {",
            "    title: 'Components/ComponentName',",
            "    excludeStories: ['ComponentTemplateName'],",
            "    argTypes: {",
            "        booleanExample: {",
            "            control: { type: 'boolean' },",
            "            description: 'true/false toggle to controls',",
            "            table: {",
            "                category: 'Pick one: CSS, HTML, Interactive'",
            "            }",
            "        },",
            "        selectExample: {",
            "            options: [0, 1, 2, 3], // iterator",
            "            mapping: ['string1', 'string2', 'string3', 'string4'], // values",
            "            control: {",
            "                type: 'select',",
            "                labels: ['string1-label', 'string2-label', 'string3-label', 'string4-label'] // public labels",
            "            },",
            "            description: 'select menu mapping to strings (example: use for variant class names)',",
            "            table: {",
            "                category: 'Pick one: CSS, HTML, Interactive'",
            "            }",
            "        },",
            "        stringExample: {",
            "            name: 'stringExample',",
            "            type: 'string',",
            "            description: 'text box control',",
            "            table: {",
            "                category: 'Pick one: CSS, HTML, Interactive'",
            "            }",
            "        },",
            "        children: {",
            "            description: 'creates a slot for children',",
            "            table: {",
            "                category: 'HTML'",
            "            }",
            "        },",
            "    }",
            "}",
            "",
            "// build every component case here in the template (private api)",
            "export const ComponentTemplateName = ({ booleanExample, selectExample, stringExample, children }) => (",
            "    <div",
            "        // use clsx for multiple classnames",
            "        className={clsx('defaultClass', selectExample && `${selectExample}`, booleanExample && 'defaultClass--modifier')}",
            "        // use undefined for values that shouldn't be set if false",
            "        aria-hidden={booleanExample ? 'true' : undefined}",
            "    >",
            "        {/* use {children} for wrapper component templates */}",
            "        <>",
            "        {stringExample}",
            "        {children}",
            "        </>",
            "    </div>",
            ")",
            "",
            "// create a \"playground\" demo page that may set some defaults and allow story to access component controls",
            "export const Playground = ComponentTemplateName.bind({})",
            "Playground.args = {",
            "    stringExample: 'Default text',",
            "    booleanExample: false,",
            "    children: (",
            "        <>",
            "            <StoryTemplateName someProp=\"Use props from other stories\" />",
            "        </>",
            "    )",
            "}",
            ""
        ],
        "description": "Basic component story jsx template"
    }
}
